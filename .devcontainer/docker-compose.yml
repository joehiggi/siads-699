# Dev Container - Uses root-level Docker setup with PostgreSQL
services:
  devcontainer:
    # Use the same Dockerfile as the standalone setup
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: pdf-ocr-devcontainer
    volumes:
      # Mount project directory
      - ..:/workspace:cached
      # Persist command history
      - devcontainer-bashhistory:/commandhistory
    # Connect to database network
    depends_on:
      db:
        condition: service_healthy
    # Share network with database
    network_mode: service:db
    # Enable GPU support (comment out if no GPU)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - PYTHONPATH=/workspace
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres
      - HISTFILE=/commandhistory/.bash_history
    # Keep container running for VS Code
    command: sleep infinity
    stdin_open: true
    tty: true

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Optional: Add init scripts
      # - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  devcontainer-bashhistory:
