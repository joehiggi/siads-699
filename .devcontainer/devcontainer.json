<<<<<<< HEAD
// For format details, see https://aka.ms/devcontainer.json
{
	"name": "PDF OCR & CNN Training",
	"description": "ML Development container with PyTorch, OCR, and PostgreSQL for SIADS 699 Capstone",

	// Use docker-compose to build and run the container
	"dockerComposeFile": "docker-compose.yml",
	"service": "devcontainer",
	"workspaceFolder": "/workspace",

	// Features to add to the dev container
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/git:1": {}
	},

	// Forward ports for web services
	"forwardPorts": [
		5432,  // PostgreSQL
		6006,  // TensorBoard
		8888,  // Jupyter
		8890   // Jupyter Lab
	],

	// Port labels for better identification
	"portsAttributes": {
		"5432": {
			"label": "PostgreSQL",
			"onAutoForward": "silent"
		},
		"6006": {
			"label": "TensorBoard",
			"onAutoForward": "notify"
		},
		"8888": {
			"label": "Jupyter Notebook",
			"onAutoForward": "notify"
		},
		"8890": {
			"label": "Jupyter Lab",
			"onAutoForward": "notify"
		}
	},

	// Commands to run after container is created
	"postCreateCommand": "pip install --no-cache-dir -e . 2>/dev/null || echo 'No setup.py found, skipping editable install'",

	// VS Code customizations
	"customizations": {
		"vscode": {
			"extensions": [
				// AI Assistants
				"anthropics.claude-code",
				"github.copilot",
				"github.copilot-chat",

				// Python
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.black-formatter",
				"ms-python.isort",

				// Jupyter
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",

				// Docker
				"ms-azuretools.vscode-docker",

				// Database
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg",

				// Git
				"eamodio.gitlens",

				// YAML
				"redhat.vscode-yaml",

				// Markdown
				"yzhang.markdown-all-in-one",

				// Code formatting
				"esbenp.prettier-vscode"
			],
			"settings": {
				// AI Assistant settings
				"github.copilot.enable": {
					"*": true,
					"plaintext": false,
					"markdown": true,
					"python": true,
					"javascript": true,
					"yaml": true,
					"json": true
				},
				"github.copilot.advanced": {
					"debug.overrideEngine": "codex"
				},

				// Python settings
				"python.defaultInterpreterPath": "/opt/conda/bin/python",
				"python.formatting.provider": "black",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.linting.flake8Enabled": true,
				"python.testing.pytestEnabled": true,

				// Editor settings
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": "explicit"
				},
				"files.autoSave": "afterDelay",
				"files.autoSaveDelay": 1000,

				// Terminal (bash from root Dockerfile)
				"terminal.integrated.defaultProfile.linux": "bash",
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash"
					}
				},

				// Jupyter
				"jupyter.askForKernelRestart": false,

				// Git
				"git.autofetch": true
			}
		}
	},

	// Run as root for full permissions
	"remoteUser": "root",

	// Environment variables
	"remoteEnv": {
		"PYTHONPATH": "/workspace",
		"TESSDATA_PREFIX": "/usr/share/tesseract-ocr/4.00/tessdata",
		"DATABASE_URL": "postgresql://postgres:postgres@db:5432/postgres"
	},

	// Mount the Docker socket for Docker-in-Docker
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
	]
=======
// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",

	// Sets the description for the dev container
	"description": "Development container for SIADS 699 Capstone Project",

	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.12-bullseye",

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "sudo pip3 install --user -r requirements.txt",
	"postCreateCommand": "sudo apt-get update && sudo apt-get install tesseract-ocr",
	"postCreateCommand": "sudo apt-get update && sudo apt-get install vim",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root",

	// Other settings.json values you want to set. More info: https://aka.ms/vscode-remote/devcontainer.json#settings.
	"dockerComposeFile": "docker-compose.yml",
    "service": "devcontainer",
    "workspaceFolder": "${localWorkspaceFolderBasename}"
>>>>>>> 34b07649524b3c62462ec23cbde7625f5674031c
}
